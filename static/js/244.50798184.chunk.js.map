{"version":3,"file":"static/js/244.50798184.chunk.js","mappings":"kRAEMA,EAAYC,EAAAA,EAAAA,IAAH,gDAITC,EAAcD,EAAAA,EAAAA,GAAH,oEAKXE,EAAOF,EAAAA,EAAAA,GAAH,6LAcJG,EAAaH,EAAAA,EAAAA,IAAH,oEAKVI,EAASJ,EAAAA,EAAAA,KAAH,6C,SCwBZ,EA3CgB,WACd,IAAQK,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,EAAG,6CAAyCF,EAAzC,YACT,GAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACoBC,EAAAA,EAAAA,GAAYL,GADhC,cACQM,EADR,OAGEH,GAAW,WACT,OAAOG,EAAIC,QAAQC,KAAI,kBAA8B,CACnDV,GADqB,EAAGA,GAExBW,OAFqB,EAAOA,OAG5BC,QAHqB,EAAeA,QAAf,GAKxB,IATH,kBAUSJ,EAAIK,MAVb,4CADc,uBAAC,WAAD,wBAadC,EACD,GAAE,CAACZ,KAGF,SAACR,EAAD,UACGU,EAAQW,OAAS,GAChB,SAACnB,EAAD,UACGQ,EAAQM,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,SAACf,EAAD,WACE,iCACE,UAACC,EAAD,YACE,SAACC,EAAD,qBADF,KAC4BY,MAE5B,6BAAKC,EAAL,WALOZ,EADA,OAYf,oEAIP,C,8ECjDKgB,EAAU,2CAEVT,EAAW,mCAAG,WAAOU,GAAP,8FAAYC,EAAZ,+BAAyB,GAAIC,EAA7B,+BAA0C,CAAC,EAA3C,kBAESC,EAAAA,EAAAA,IAAA,UACpBH,EADoB,YACbD,GADa,OACHE,GACpBC,GAJc,cAEVE,EAFU,yBAMTA,EAAWC,MANF,gCAQhBC,QAAQC,MAAR,MARgB,yDAAH,sDAYjBjB,EAAYkB,UAAY,CACtBR,IAAKS,IAAAA,OAAAA,WACLR,WAAYQ,IAAAA,OACZP,WAAYO,IAAAA,QAGd,K","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/fetch.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst ListReviews = styled.ul`\n  margin: 0;\n  border: 1px solid #cacaca;\n`;\n\nconst Item = styled.li`\n  list-style: none;\n\n  :nth-of-type(odd) {\n    background-color: #dadada;\n  }\n\n  padding: 10px;\n\n  /* :not(:last-child) {\n    margin-bottom: 20px;\n  } */\n`;\n\nconst AuthorWrap = styled.div`\n  margin-bottom: 10px;\n  font-size: 18px;\n`;\n\nconst Author = styled.span`\n  font-weight: 500;\n`;\n\nexport { Container, ListReviews, Item, AuthorWrap, Author };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchMovies from 'services/fetch';\nimport {\n  Author,\n  AuthorWrap,\n  Container,\n  Item,\n  ListReviews,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const URL = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetchMovies(URL);\n      // console.log(res.results);\n      setReviews(() => {\n        return res.results.map(({ id, author, content }) => ({\n          id,\n          author,\n          content,\n        }));\n      });\n      return res.cast;\n    }\n    fetchData();\n  }, [URL]);\n\n  return (\n    <Container>\n      {reviews.length > 0 ? (\n        <ListReviews>\n          {reviews.map(({ id, author, content }) => (\n            <Item key={id}>\n              <>\n                <AuthorWrap>\n                  <Author>Author</Author>: {author}\n                </AuthorWrap>\n                <p>'{content}'</p>\n              </>\n            </Item>\n          ))}\n        </ListReviews>\n      ) : (\n        <p>We don't have any review for this movie</p>\n      )}\n    </Container>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = 'api_key=7b264c573728240a6ab06336c75c925f';\n\nconst fetchMovies = async (url, properties = '', controller = {}) => {\n  try {\n    const dataMovies = await axios.get(\n      `${url}?${API_KEY}${properties}`,\n      controller\n    );\n    return dataMovies.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nfetchMovies.propTypes = {\n  url: PropTypes.string.isRequired,\n  properties: PropTypes.string,\n  controller: PropTypes.object,\n};\n\nexport default fetchMovies;\n"],"names":["Container","styled","ListReviews","Item","AuthorWrap","Author","id","useParams","URL","useState","reviews","setReviews","useEffect","fetchMovies","res","results","map","author","content","cast","fetchData","length","API_KEY","url","properties","controller","axios","dataMovies","data","console","error","propTypes","PropTypes"],"sourceRoot":""}